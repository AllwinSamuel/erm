 #!/bin/bash

if [ "$#" -lt 4 ]; then
    echo "Usage: $0 source_basedir xml_dir out_dir [search string...]" >&2
    exit 1
fi

source_basedir="$1"
xml_dir="$2"
out_dir="$(realpath "$3")"
file_pattern="security-*.xml"


shift 3 # using the arguments starting from 4 for search string

mkdir -p "$xml_dir"

mkdir -p "$out_dir"

echo "Input values are displayed respectively"

echo $source_basedir

echo $xml_dir

echo $out_dir

output_xml="$xml_dir/security.xml"
output_text="$out_dir/sac_xml_details.txt"
# Initializing counts
total_matched_files=0
total_processed_files=0

# Processing each search string
for soc_role in "$@"; do
    matched_count=0

    # Search for the current string in the XML files
    while IFS= read -r -d '' input_xml; do
        # Append the matched file content to the web.xml file
	echo "Input file inside while : "$input_xml
        awk -v soc_role="$soc_role" '
            BEGIN { capture = 0; output = "" }
            /<url/ { capture = 1; output = $0; next; }
            capture && /<\/url>/ {
                output = output "\n" $0;
                if (index(output, soc_role) > 0) print output;
                capture = 0;
                output = "";
                next;
            }
            capture { output = output "\n" $0; }
        ' "$input_xml" >> "$output_xml"

        # Updating the matched file count
        if grep -q "$soc_role" "$input_xml"; then
            ((matched_count++))
        fi
    #done < <(find . -name "$file_pattern" -not -path "*/build/*" -print0)
    done < <(find $source_basedir -name "$file_pattern" -not -path "$source_basedir/build/*" -print0)

    # Appending details to the text file
    {
        echo "Details of files in which '$soc_role' matched:"
        echo "Number of files: $matched_count"
        echo "List of files:"
        find "$source_basedir" -name "$file_pattern" -not -path "$source_basedir/build/*" -exec grep -l "$soc_role" {} +
        echo
    } >> "$output_text"

    # Updating the total matched files count to be printed in text file
    ((total_matched_files+=matched_count))
done

# Count the processed files for the given file pattern
processed_files=$(find "$source_basedir" -name "$file_pattern" -not -path "$source_basedir/build/*")
if [ -n "$processed_files" ]; then
    total_processed_files=$(echo "$processed_files" | wc -l)
else
    total_processed_files=0
fi

# Terminal logs
echo "Number of files considered by the file pattern '$file_pattern': $total_processed_files"

# File count and file details added to text file
{
    echo "Number of files processed for the file pattern '$file_pattern': $total_processed_files"
    echo "List of files processed for the file pattern '$file_pattern':"
    echo "$processed_files"
} >> "$output_text"

# Searching for *.zip files in the $out_dir
zip_files=$(find "$out_dir" -name "*.zip")

# Loop each zip for searching ROOT.war
for zip_file in $zip_files; do
    # Checking if the zip file contains ROOT.war
    if unzip -l "$zip_file" | grep -q "ROOT.war"; then
        # Extract ROOT.war to a temp dir
        echo "Extracting ROOT.war from: $zip_file"
        unzip -qq "$zip_file" "*/ROOT.war" -d "$source_basedir/war_change"

        # Fetching ROOT.war location
        root_dir=$(dirname "$(find "$source_basedir/war_change" -name "ROOT.war")")

        mkdir -p "$root_dir/ROOT"

        unzip -qq "$root_dir/ROOT.war" -d "$root_dir/ROOT" && rm "$root_dir/ROOT.war"

        # Replacing the web.xml
        echo "Moving security.xml to : $xml_dir/"
        cp "$xml_dir/security.xml" "$root_dir/ROOT/WEB-INF/"

        # Sac.war creation
        (
            cd "$root_dir/ROOT" || exit
            zip -r -q ../SAC.war .
            cd ..
            rm -rf ROOT/
        )


        # Updating zip with sac.war

            cd $source_basedir/war_change
            ls -lrth AdventNet/Sas/tomcat/webapps/SAC.war
            ls -lrth $zip_file
            echo zip name : $zip_file
            zip -r "$out_dir/SOC_SAC.zip" AdventNet/Sas/tomcat/webapps/SAC.war



        # Clean up extracted files
        rm -rf "$source_basedir/war_change"
    fi
done
# Location of the text file
echo "Xml details saved to: $output_text"
