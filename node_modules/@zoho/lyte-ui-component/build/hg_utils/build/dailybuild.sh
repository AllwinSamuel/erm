#$Id:$
#!/bin/sh
#########################
if [ "$#" -ne "4" ]
then
    echo "Usage: sh -x dailybuild.sh <MODULE NAME> <REPO_TYPE> <GROUP/MODULENAME>" 
    exit 1
fi

set -x

main()
{
        setVariables $*
        createRandomDir    
        updateSources
        insertBuildLogs
}

setVariables()
{
    MODULE="$1"
    REPO_TYPE="$2"
    CLONE_URL="$3"
    PRODUCTNAME="$4"
}

updateSources()
{
    cd ${HOME}/REPOSITORY
    if [ "${REPO_TYPE}" = "HG" ]
    then
        if [ -d "${MODULE}" ]
        then
            cd ${MODULE}
            hg pull -b default
	    hg upd -C default
        else
            hg clone https://build:integ@cmsuite.csez.zohocorpin.com/${CLONE_URL}
        fi
    else
        if [ -d "${MODULE}" ]
        then
            rm -rf ${MODULE}
        fi
        git clone http://build:ftrlp0hV1A@git/${CLONE_URL}
    fi
}
insertBuildLogs()
{
    if [ -f "${HOME}/REPOSITORY/${MODULE}/build/${PRODUCTNAME}.txt" ]
    then
	source ${HOME}/REPOSITORY/${MODULE}/build/${PRODUCTNAME}.txt
        if [ -n "${ARG}" ]
        then
            export checkout_label="${ARG}"
        else
            echo "CHECKOUT LABEL IS NOT AVAILABLE. HENCE QUITTING THE BUILD."
	    sendMail "Checkout label is not available for ${PRODUCTNAME}" "Checkout label is not available for ${PRODUCTNAME} .."
            exit 1
        fi

        if [ -n "${STATIC_DIRNAME}" ]
        then
            export static_dirname="${STATIC_DIRNAME}"
        else
            export static_dirname="NA"
        fi

        if [ -n "${CUSTOMER_NAME}" ]
        then
            export customer_name="${CUSTOMER_NAME}"
        else
            export customer_name="DEFAULT"
        fi

        if [ -n "${LABEL_TYPE}" ]
        then
            export label_type="${LABEL_TYPE}"
        else
            export label_type="DEFAULT"
        fi

        if [ -n "${TEAM_SPECIFIC_INFO}" ]
        then
           export customize_info="${TEAM_SPECIFIC_INFO}" 
        else
           export customize_info="NA"
        fi

        if [ -n "${BUILD_COMMENT}" ] 
        then
           export build_comment="${BUILD_COMMENT}"
        else
           export build_comment="Daily Build"
        fi

        if [ -n "${BUILD}" ]
        then
           export started_from="${BUILD}"
        else
           export started_from="Cron"
        fi

        if [ -n "${BUILD_TYPE}" ]
        then
            export build_type="${BUILD_TYPE}"
        else
            export build_type="FULLBUILD"
        fi
        status="Started"
        started_by_id="Integration@zohocorp.com"
        apiResult=`python ${HOME}/DAILY_BUILD/apiwrapper.py "${PRODUCTNAME}" "${checkout_label}" "${status}" "${build_comment}" "${started_by_id}" "${build_type}" "${started_from}" "true" "${static_dirname}" "${customer_name}" "${label_type}" "${customize_info}"`
        WH_BUILD_ID=`echo $apiResult`
	echo ${WH_BUILD_ID} | grep "^[0-9]" > /dev/null
	if [ $? -ne 0 ]
	then
		sendMail "Unable to get WH_BUILD_ID for ${PRODUCTNAME}" "Unable to get WH_BUILD_ID for ${PRODUCTNAME} .."
		exit 1
	fi
        callCronScript
    else
        echo "${HOME}/REPOSITORY/${MODULE}/build/${PRODUCTNAME}.txt file is not found. Hence Quitting the daily build."
	sendMail "${PRODUCTNAME}.txt is not available" "${PRODUCTNAME}.txt is not available .."
        exit 1
    fi
}
callCronScript()
{
    if [ -f "${HOME}/REPOSITORY/${MODULE}/build/${PRODUCTNAME}.txt" ]
    then
    	DATETIME=`date +%b_%d_%Y_%I_%M_%S` 
	PRODUCT_DAILY_TXT="${HOME}/${PRODUCTNAME}_${WH_BUILD_ID}.txt"

        cp -f ${HOME}/REPOSITORY/${MODULE}/build/${PRODUCTNAME}.txt ${PRODUCT_DAILY_TXT}
	echo "TIME=\"${DATETIME}\"" >> ${PRODUCT_DAILY_TXT}
	echo "WH_BUILD_ID=\"${WH_BUILD_ID}\"" >> ${PRODUCT_DAILY_TXT}
        sh -x ${HOME}/cron_bws/cron.sh ${PRODUCTNAME} ${WH_BUILD_ID}
    else
        echo "${HOME}/REPOSITORY/${MODULE}/build/${PRODUCTNAME}.txt file is not found. Hence Quitting the daily build."
    fi
}
sendMail()
{
	MAIL_SUBJECT=$1
	MAIL_CONTENT=$2
	mail -s "${MAIL_SUBJECT}" "integration-team@zohocorp.com" <<-EOF

	Dear Team,

	${MAIL_CONTENT}

	Thanks & Regards,
	Integration Team

EOF
}
main $* > ${HOME}/DAILY_BUILD/logs/daily_build_$1.log 2>&1
