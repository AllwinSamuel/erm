#!/bin/bash
main()
{
	[ $1 ] || { echo " Usage: bash $0 <ProfilePath>"; exit 1;}
	cdir=`pwd`
	profilePath=$1
	TemplateFilePath="${profilePath}/exportOptions.plist"
	PlistTeamIDReplace="YetTo"
	CertificateNameReplaced="YetTo"
	AppStore_Cert_Name="iPhone Distribution: Zoho Corporation (TZ824L8Y37)"
	Inhouse_Cert_Name="iPhone Distribution: Zoho Corporation"
	PlistTemplateStart
	ReadFiles $profilePath
	PlistTemplateEnd
}
PlistTemplateStart()
{

echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">
<plist version=\"1.0\">
<dict>
	<key>method</key>
        <string>configmethod</string>
        <key>teamID</key>
        <string>configteamID</string>
        <key>provisioningProfiles</key>
        <dict>" > ${TemplateFilePath}

}
ReadFiles()
{
	local profileflder_path=$1
	if [[ -d ${profileflder_path} ]]
	then
		profile_count=0
		for mprovision in `ls -1 ${profileflder_path}`
		do
			if [[ ${mprovision} == *".mobileprovision"* ]]
			then
				profile_count=`expr ${profile_count} + 1`
				echo "Reading ${mprovision} .."
				ReadProfile ${profileflder_path}/${mprovision}
				teamprefix_id=`echo $retval | cut -d ":" -f1`
				teambundle_id=`echo $retval | cut -d ":" -f2`
				teamprofile_name=`echo $retval | cut -d ":" -f3`
				if [[ "${teamprefix_id}" != "3QZ6UJB6QX" ]]
				then
					configmethod="app-store"
				else
					configmethod="enterprise"
				fi
				if [[ "${PlistTeamIDReplace}" == "YetTo" ]]
				then
					perl -w -e "s@configmethod@${configmethod}@g" -p -i ${TemplateFilePath}
					perl -w -e "s@configteamID@${teamprefix_id}@g" -p -i ${TemplateFilePath}
					PlistTeamIDReplace="ValueReplaced"
				fi
                		echo -e "\n\t\t<key>${teambundle_id}</key>\n\t\t<string>${teamprofile_name}</string>" >> ${TemplateFilePath}
			fi
		done
		if [[ ${profile_count} -eq 0 ]]
		then
                	echo "Oops, .mobileprovision profiles not available under ${profilePath} folder, kindly provide a valid folder.."
                        rm -fv ${TemplateFilePath}
                        exit 1
		else
			echo -e "\nSuccessfully created the exportOptions.plist file in below location:\n${TemplateFilePath}"
		fi
	else
		echo "${profilePath} is not a valid profile folder.. Kindly provide valid one.."
		rm -fv ${TemplateFilePath}
		exit 1
	fi
}
ReadProfile()
{
	local input=$1
	lineno=0
	teamIdlno=0
	while IFS= read -r line
	do
  		lineno="`expr ${lineno} + 1`"
		if [[ "$line" == *"<key>application-identifier</key>"* ]]
		then
			teamid_lno="`expr ${lineno} + 1`"
		fi
                if [[ ${lineno} -eq ${teamid_lno} ]]
                then
                        teamIdenifierVal=`echo "${line}" | sed 's/[<>\/]//g' | sed 's/string//g'| sed -e "s/[[:space:]]\+//g"`
			teamIdenifier=`echo $teamIdenifierVal | cut -d "." -f1`
			bunlde_id=`echo $teamIdenifierVal | cut -d "." -f2-`
                fi

  
  		if [[ "${line}" == *"<key>Name</key>"* ]]
  		then
	  		profilelno="`expr ${lineno} + 1`"
  		fi

  		if [[ ${lineno} -eq ${profilelno} ]]
  		then
	  		profileName=`echo "${line}" | sed 's/[<>\/]//g' | sed 's/string//g' | sed 's/^[[:space:]]//g'`
  		fi
	done < "$input"
	retval="${teamIdenifier}:${bunlde_id}:${profileName}"
}
PlistTemplateEnd()
{
echo "
        </dict>
	<key>signingCertificate</key>
	<string>CertName</string>
</dict>
</plist>
" >> ${TemplateFilePath}

if [[ "${CertificateNameReplaced}" == "YetTo" ]]
then
	if [[ "${configmethod}" == "app-store" ]]
	then
		perl -w -e "s@CertName@${AppStore_Cert_Name}@g" -p -i ${TemplateFilePath}
	else
		perl -w -e "s@CertName@${Inhouse_Cert_Name}@g" -p -i ${TemplateFilePath}
	fi
	CertificateNameReplaced="ValueReplaced"
fi

}
main $*
