#! /usr/bin/python

#
# This file is used to update the status of the buildlog if the build got 
# quitted partially without calling the buildlog updation script in integ-tools
# machine
#

from clonehook import *
import sys

if len(sys.argv) > 0:
    product_name_txt = sys.argv[1]
else:
    logging.error("python buildlog_update.py <PRODUCT_NAME.txt>")
    sys.exit(1)

#
# Loading data from the <PRODUCT_NAME>.txt file which was provided as argument
#
details = {}
try:
    product_file = open(product_name_txt)
    lines = product_file.readlines()

    for line in lines:
        line = line.strip()
        if not line:
            continue

        data = line.split("=")
        if len(data) > 2:
            continue

        variable_name = data[0]
        variable_value = "=".join(data[1:]).strip().strip('"')

        details[variable_name] = variable_value
except Exception as ex:
    print ex

#
# Cross checking the data in the database is updated or not and updating
# it if it was not updated
#

try:
    build_id = details['WH_BUILD_ID']
    build_status = details['BUILD_STATUS']
except KeyError:
    print "WH_BUILD_ID or BUILD_STATUS is not available in the provided <PRODUCT_NAME>.txt file :"+ product_name_txt
    sys.exit(1)

classObject = updateTime("GET")
buildlog_url = 'buildlogs/' + build_id
buildlog_response = classObject.urlGet(buildlog_url, {}, 'GET')
buildlog = buildlog_response['buildlogs']
#print buildlog

db_status = buildlog['status']

if db_status in [None, "", "null", "Started"]:
    update_params = {'status': build_status}
    buildlog_response = classObject.urlGet(buildlog_url, update_params, 'PUT')

