import { defineRelation } from '@slyte/core/src/lyte-utils.js';

function commonApi(LyteClass){
    LyteClass.prototype.types = ["string", "object", "number", "boolean", "array"];
    LyteClass.prototype.isComponent = function(object) {
        if(object && object.$node && object.__data) {
          return true;
        }
        return false;
    }
    LyteClass.prototype.Transform = {};
    LyteClass.prototype.one = function(name,opts){
        return defineRelation(name,"belongsTo",opts);
    }
      
    LyteClass.prototype.many = function(name,opts){
        return defineRelation(name,"hasMany",opts);
    }
    LyteClass.prototype.registerDataType = function(fieldTypeName, properties){
        var exts = "extends";
        if(this.Transform.hasOwnProperty(fieldTypeName)){
            LyteClass.error("Custom Field Type - "+fieldTypeName+" -  already exists.");
          return;
        }
        if(properties[exts] == undefined || this.types.indexOf(properties[exts]) == -1){
            LyteClass.error("Not a valid field type - "+properties[exts]);
          return;
        }
        this.Transform[fieldTypeName] = properties;
    }

      
}