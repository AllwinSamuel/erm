import sys
import json
file1 = open(sys.argv[1], 'r')
Lines = file1.readlines()

def closing_brackets(list_length):
    brackets=""
    if int(list_length) >= 1:
        for i in range(list_length):
            brackets+= "}" * i
    return brackets

final_string=""
list_val = []
x = 0
while(1):
    output_dict={}
    if len(list_val) > 0:
        Lines = list_val
    else:
        if x == 1:
            break
    list_val = []
    x = 1
    for lines in Lines:
        commented_lines = lines.startswith("#")
        if not commented_lines:
            val = lines.strip().split("=")
            splitted_keys = val[0].strip().split(".")
            while("" in splitted_keys) :
                splitted_keys.remove("")


            i = 0
            if len(splitted_keys) > 0:
                splitted_keys[len(splitted_keys)-1] = splitted_keys[len(splitted_keys)-1] + "=" + str(val[1].strip())
            try:
                for item in splitted_keys:
                    if(i == 0):
                        if item not in output_dict:
                            if "=" in item:
                                output_dict[str(item.split("=")[0])] = str(item.split("=")[1])
                            else:
                                output_dict[item] = {}
                    if(i == 1):
                        if item not in output_dict[splitted_keys[0]]:
                            if "=" in item:
                                output_dict[splitted_keys[0]][str(item.split("=")[0])] = str(item.split("=")[1])
                            else:
                                output_dict[splitted_keys[0]][str(item)] = {}
                    if(i == 2):
                        if item not in output_dict[splitted_keys[0]][splitted_keys[1]]:
                            if "=" in item:
                                output_dict[splitted_keys[0]][splitted_keys[1]][str(item.split("=")[0])] = str(item.split("=")[1])
                            else:
                                output_dict[splitted_keys[0]][splitted_keys[1]][str(item)] = {}
                    if(i == 3):
                        if item not in output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]]:
                            if "=" in item:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][str(item.split("=")[0])] = str(item.split("=")[1])
                            else:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][str(item)] = {}
                    if(i == 4):
                        if item not in output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]]:
                            if "=" in item:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][str(item.split("=")[0])] = str(item.split("=")[1])
                            else:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][str(item)] = {}
                    if(i == 5):
                        if item not in output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]]:
                            if "=" in item:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[0]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][str(item.split("=")[0])] = str(item.split("=")[1])
                            else:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][str(item)] = {}
                    if(i == 6):
                        if item not in output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][splitted_keys[5]]:
                            if "=" in item:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][splitted_keys[5]][str(item.split("=")[0])] = str(item.split("=")[1])
                            else:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][splitted_keys[5]][str(item)] = {}
                    if(i == 7):
                        if item not in output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][splitted_keys[5]][splitted_keys[6]]:
                            if "=" in item:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][splitted_keys[5]][splitted_keys[6]][str(item.split("=")[0])] = str(item.split("=")[1])
                            else:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][splitted_keys[5]][splitted_keys[6]][str(item)] = {}
                    if(i == 8):
                        if item not in output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][splitted_keys[5]][splitted_keys[6]][splitted_keys[7]]:
                            if "=" in item:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][splitted_keys[5]][splitted_keys[6]][splitted_keys[7]][str(item.split("=")[0])] = str(item.split("=")[1])
                            else:
                                output_dict[splitted_keys[0]][splitted_keys[1]][splitted_keys[2]][splitted_keys[3]][splitted_keys[4]][splitted_keys[5]][splitted_keys[6]][splitted_keys[7]][str(item)] = {}

                    i += 1
            except Exception as error:
                list_val.append(lines)
                break


    ###print(output_dict)
    #print json.dumps(output_dict)
    json_op=json.dumps(str(output_dict))
    print json.loads(json_op.replace("\\\\", "\\"))

