<!DOCTYPE project [
<!ENTITY library SYSTEM "./library.xml">
]>

<project name="build" default="all" basedir=".">
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    <property environment="env"/>
    <property file="ant.properties"/>

&library;


<!-- ============================================================================
       CALLING ALL TARGETS IN ORDER
     =========================================================================-->

<target name="all">
<mkdir dir="${basedir}/buildlogs"/>
<mkdir dir="${build_dir}"/>

<echo message="JAVA_HOME        :::: ${env.JAVA_HOME}" />
<echo message="ANT HOME         :::: ${env.ANT_HOME}" />
<echo message="ENVIRONMENT PATH :::: ${env.PATH}" />


<get src="http://build.csez.zohocorpin.com/integ/hg_utils/milestones/stable/hg_utils.zip" dest="${basedir}/hg_utils.zip" verbose="true" usetimestamp="false" ignoreerrors="true" />
<unzip dest="${basedir}">
	<fileset dir="${basedir}" includes="hg_utils.zip" />
</unzip>
<delete file="${basedir}/hg_utils.zip"/>


<antcall target="copy">
                <param name="val" value="hgutils"/>
                <param name="hgutils_copy_todir" value="${build_dir}/utility_packages/exe"/>
                <param name="hgutils_fileset_dir" value="${basedir}/hg_utils/utility_packages/exe/"/>
                <param name="hgutils_copy_includes" value="**"/>
                <param name="hgutils_copy_excludes" value=""/>
        </antcall>

<antcall target="getdidinjectionutilsdep">
	<param name="val" value="didinjection"/>
</antcall>


<echo message="value of ${url}"/>
<basename property="zipname" file="${url}"/>


<!--if>
	<equals arg1="${product_name}" arg2="DESKTOPCENTRAL" />
	<then>
			<propertyregex property="url_arg" input="${url}" regexp="http://me-build1/products/desktopcentral" replace="/zoho/build/dload/desktopcentral" global="true" />
	</then>
	<elseif>
	<equals arg1="${product_name}" arg2="OPMUNIFIED" />
	<then>
		<propertyregex property="url_arg" input="${url}" regexp="http://integ-hm9/products/opmunified" replace="/zoho/build/dload/opmunified" global="true" />
        </then>
	</elseif>
	<else-->
		<propertyregex property="url_arg" input="${url}" regexp="http://build/me" replace="/zoho/build/downloads/dload/me" global="true" />
                
	<!--/else>
</if-->
<!--
	<propertyregex property="url_arg" input="${url}" regexp="http://build/me" replace="/zoho/build/downloads/dload/me" global="true" />
-->

<echo message="value of url_arg ${url_arg}"/>

<if>
<and>
	<not> <available file="${url_arg}" type="file"/> </not>
	<not><available file="${url_arg}" type="dir"/></not>
</and>
<then>
	<fail message="Please give proper download url."/>
</then>
</if>



<if>
<available file="${url_arg}" type="file"/>
<then>
<propertyregex property="buildpath" input="${url_arg}" regexp="${zipname}" replace="" global="true" />

</then>
</if>

<echo message="value of buildpath ${buildpath}"/>

<if>

<available file="${url_arg}" type="dir"/>
<then>
        <property name="buildpath" value="${url_arg}"/>

</then>
</if>

<echo message="value of ${buildpath}"/>


<antcall target="copy">
                <param name="val" value="opbinary"/>
                <param name="opbinary_copy_todir" value="${build_dir}/output"/>
                <param name="opbinary_fileset_dir" value="${buildpath}"/>
                <param name="opbinary_copy_includes" value="**.zip DO_NOT_USE_ONLY_FOR_DEBUG/** zips/**"/>
                <param name="opbinary_copy_excludes" value=""/>
        </antcall>


<if>
     <isset property="target"/>
     <then>
        <propertycopy name="build_order" from="${target}_order" silent="true"/>
     </then>
     <else>
        <propertycopy name="build_order" from="local_order" silent="true"/>
     </else>
</if>


<foreach list="${build_order}"
                target="calltarget"
                inheritall="true"
                param="prop">
</foreach>


</target>




<!-- ======================================================================
                                                CALLTARGET  TARGET
====================================================================== -->

<target name="calltarget">

<propertycopy name="call" from="${prop}_order" silent="true"/>
<propertycopy name="call_needed" from="${prop}_needed" silent="true"/>

<if>
        <equals arg1="${call_needed}" arg2="no"/>
        <then>
                <echo message="value of ${prop}_needed is No. So ${prop}_order has to be quited"/>
        </then>
        <else>
                <foreach list="${call}"
                        target="calltask"
                        inheritall="true"
                        param="prop">
                </foreach>
        </else>

</if>


</target>


<!-- ======================================================================
                                                CALLTASK  TARGET
====================================================================== -->

<target name="calltask">
        <stopwatch name="${prop}_tasktime" action="start"/>
<propertyregex property="task"
               input="${prop}"
                     regexp="(.*):"
                                                         select="\1"
                                       casesensitive="false" />

<propertyregex property="param"
               input="${prop}"
                     regexp=":(.*)"
                                                         select="\1"
                                       casesensitive="false" />



<property name="calltask" value="${param}_${task}" />
<propertycopy name="calltaskneeded" from="${calltask}_needed" silent="true"/>
<propertycopy name="description" from="${param}_${task}_description" silent="true"/>
<if>
        <equals arg1="${calltaskneeded}" arg2="no"/>
        <then>
                <echo message="Quitting ${calltask} as it is not needed"/>
        </then>
<else>
<if>
        <equals arg1="${task}" arg2="contextpkgpara"/>
        <then>
                <property name="val" value="${param}" />
                <propertycopy name="context" from="${val}_contextpkg_context" silent="false"/>
                <propertycopy name="contexthome" from="${val}_contextpkg_home" silent="true"/>
                <propertycopy name="excludefiles" from="${val}_contextpkg_excludes" silent="true"/>
                <antcall target="contextpkgpara"/>

        </then>

</if>



	<!--	
<echo message="${calltask}"/> -->



<if>

	<or>
        <equals arg1="${task}" arg2="macpkgtask"/>
        <equals arg1="${task}" arg2="exetask"/>
        </or>
        <then>

        <antcall target="postbuild"/>
        </then>


</if>

<tstamp>
        <format property="end.time" pattern="hh:mm:ss aa" />
</tstamp>

<propertycopy name="total_param_time" from="${param}_time" silent="true"/>


</else>
</if>




</target>

<target name="postbuild">
	<property name="val" value="${param}" />


	<echo message="${build_dir}"/>
	<echo message="${task}"/>

        <if>
        <equals arg1="${task}" arg2="exetask"/>
	<then>
		<echo message="${exeargs}"/>
	<propertycopy name="exeargs"    from="${val}_exe_args" silent="false"/>
	<echo message="${exeargs}"/>

	<antcall target="exetask">
        	<param name="${val}_exe_args" value="${exeargs}"/>
	</antcall>


<!--	<echo message="${exeargs}"/> -->


	</then>
	</if>

	<if>
        <equals arg1="${task}" arg2="macpkgtask"/>
        <then>

	 <propertycopy name="macpkglocalsrc" from="${val}_macpkg_localsrc" silent="false"/>
	  <propertycopy name="macpkglocaldest" from="${val}_macpkg_localdest" silent="false"/>
	  <propertycopy name="macpkgremotesrc" from="${val}_macpkg_remotesrc" silent="false"/>
	 <propertycopy name="macpkgremotedest" from="${val}_macpkg_remotedest" silent="false"/>
	  <propertycopy name="macpkghost" from="${val}_macpkg_host" silent="false"/>
	<propertycopy name="macpkguser" from="${val}_macpkg_user" silent="false"/>
	 <propertycopy name="macpkgpasswd" from="${val}_macpkg_passwd" silent="true"/>
	 <propertycopy name="macpkgcmd" from="${val}_macpkg_cmd" silent="false"/>

	<if>
         <not>
         <available file="${macpkglocalsrc}" type="file"/>
        </not>
         <then>

        <dirname property="binarysrc_dirpath" file="${macpkglocalsrc}"/>
        <basename property="binarysrc_filename" file="${macpkglocalsrc}"/>


        <antcall target="copy">
          <param name="${val}_copy_todir" value="${binarysrc_dirpath}/"/>
           <param name="${val}_fileset_dir" value="${build_dir}/output"/>
        <param name="${val}_copy_includes" value="${binarysrc_filename}"/>
        </antcall>


        </then>
        </if>

	 <if>
                <and>
               <contains  substring="InstallAnywhere2015" string = "${macpkgremotesrc}" />
               <isset property="macpkgpasswd"/>
               </and>
                   <then>

                <echo message="bincreation task started"/>

                <antcall target="bincreationtask">
                          <param name="${val}_bincreation_localsrc" value="${macpkglocalsrc}"/>
                          <param name="${val}_bincreation_localdest" value="${macpkglocaldest}"/>
                          <param name="${val}_bincreation_remotesrc" value="${macpkgremotesrc}"/>
                          <param name="${val}_bincreation_remotedest" value="${macpkgremotedest}"/>
                           <param name="${val}_bincreation_host" value="${macpkghost}"/>
                          <param name="${val}_bincreation_user" value="${macpkguser}"/>
                        <param name="${val}_bincreation_passwd" value="${macpkgpasswd}"/>
                          <param name="${val}_bincreation_cmd" value="${macpkgcmd}"/>
               </antcall>
        </then>


	<else>
		<if>
                        <and>
                        <contains  substring="InstallAnywhere2015" string = "${macpkgremotesrc}" />

                        <not> <isset property="macpkgpasswd"/> </not>
                        </and>
                        <then>
                                <echo message="bincreation task started without password"/>
                        <antcall target="bincreationtask">
                   <param name="${val}_bincreation_localsrc" value="${macpkglocalsrc}"/>
                        <param name="${val}_bincreation_localdest" value="${macpkglocaldest}"/>
                         <param name="${val}_bincreation_remotesrc" value="${macpkgremotesrc}"/>
                      <param name="${val}_bincreation_remotedest" value="${macpkgremotedest}"/>
                      <param name="${val}_bincreation_host" value="${macpkghost}"/>
                       <param name="${val}_bincreation_user" value="${macpkguser}"/>

                        <param name="${val}_bincreation_cmd" value="${macpkgcmd}"/>

                        </antcall>

		</then>
		</if>
          </else>

  </if>

        
	
	</then>
	</if>

</target>

</project>
