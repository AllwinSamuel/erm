var lyte;

function _getError() {
    var args = arguments,
    error;
    switch(args[0]) {
        case 400 :
            error = args[1] ? "url '"+args[1]+"' is not defined in router." : "Base path of url is not specified.";
            break;
        case 422 :
            error = "There is no route definition for the route "+(args[1].splice(0,args[2]+1).join('.'))+".";
            break;
        case 424 : 
            error = "File not loaded in "+args[1]+ " of route "+args[2]+".\n"+args[3][0].target.outerHTML;
            break;
        case 498: 
            error = "Invalid argument " + args[1] + (args[2] ? " provided in "+args[2] : ".");
            break;
        case 499 : 
            error = args[1] ? ("Dynamic params for the route "+args[1]+" is not provided" + (args[2] && args[2].outerHTML  ? " in "+args[2].outerHTML : ".")) : "Transition tried without arguments.";
            break;
        case 420 : 
            error = (args[3]? "Promise rejected" : "Error")+" in "+args[1]+" of route "+args[2]+".";
            break;
        case 428 : 
            error = "There is no outlet named "+args[1]+".";
            break;
        case 203 :
            error =  "Data provided for component is not valid.";
            break;
        case 405 :
            error =  "Method invocation before Router initialized.";
            break;
    }
    return 'LR '+args[0]+': '+error;
}

function _bindLyteInstanceToError(ins) {
    lyte = ins;
}

function _consoleError() {
    return lyte.error(arguments[0].stack ? arguments[0] : _getError.apply(this,arguments),arguments[3]);
}

export {
    _bindLyteInstanceToError,
    _getError,
    _consoleError
}