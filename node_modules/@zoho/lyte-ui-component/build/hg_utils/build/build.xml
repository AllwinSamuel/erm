<project name="build" default="clone" basedir="." xmlns:props="antlib:org.apache.ant.props" xmlns:ivy="antlib:org.apache.ivy.ant">
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

    <property environment="env"/>
    <echo message="JAVA_HOME        :::: ${env.JAVA_HOME}" />
    <echo message="ANT HOME         :::: ${env.ANT_HOME}" />
    <echo message="ENVIRONMENT PATH :::: ${env.PATH}" />
	 <!--if>
                <not>
                        <isset property="env.ANT_HOME"/>
                </not>
                <then>
                        <fail message="ANT_HOME is not set in system enviroment. Kindly set it and proceed further" />
                </then>
	</if-->

	<loadfile srcfile="ant.properties" property="load_properties_file">
                <filterchain>
                        <linecontainsregexp>
                                <regexp pattern="^load_properties_file"/>
                        </linecontainsregexp>
                        <tokenfilter>
                                <replacestring from="load_properties_file=" to=""/>
                        </tokenfilter>
                        <striplinebreaks/>
                </filterchain>
        </loadfile>

      
      <if>
        <isset property="load_properties_file"/>
        <then>
        <for list="${load_properties_file}" param="fileline">
            <sequential>
                   
                    <if>
                    <available file="@{fileline}" type="file"/>
                    <then>
                            <property file="@{fileline}"/>
                    </then>
                   </if>
            </sequential>
        </for>
        </then>
	</if>
	<property environment="env"/>
	<if>
	      <available file="${env.ANT_HOME}/lib/ant-props.jar" type="file" />
     	<then>
	<typedef resource="org/apache/ant/props/antlib.xml"
                   classpath="${env.ANT_HOME}/lib/ant-props.jar"/>

            <propertyhelper>
              <props:nested />
	    </propertyhelper>

       </then>
       <else>
		                        <echo message="${env.ANT_HOME}/lib/ant-props.jar is not available ."/>
	</else>
       </if>
	<if>
	    <not>
	        <isset property="trim_val"/>
	    </not>
	    <then>
	        <loadfile property="trim_val" srcfile="ant.properties">
	            <filterchain>
	              <trim/>
	            </filterchain>
	        </loadfile>
	        <echo message="${trim_val}" file="ant.properties"/>
	    </then>
	</if>

    <property file="ant.properties"/>
                                                                                                        
<!-- ============================================================================
       CALLING PRECHECK TASK
     =========================================================================-->

<target name="clone">

<if>
    <available file="${user.home}/.wgetrc"/>
    <then>
        <loadfile property="user_credentials" srcfile="${user.home}/.wgetrc">
            <filterchain>
                <filterreader classname="org.apache.tools.ant.filters.HeadFilter">
                    <param name="lines" value="2" />
                </filterreader>
            </filterchain>
        </loadfile>
        <propertyregex property="wgetusername" input="${user_credentials}" regexp="(user)=(.*)" select="\2" override="true"/>
        <propertyregex property="wgetpassword" input="${user_credentials}" regexp="(password)=(.*)" select="\2" override="true"/>
        <property name="wurl_username" value="${wgetusername}" />
        <property name="wurl_password" value="${wgetpassword}" />
    </then>
</if>

    <if>
        <not>
            <available file="${basedir}/checks.xml" type="file" />
        </not>
	<then>
	    <get src="https://build.zohocorp.com/integ/hg_utils/milestones/stable/hg_utils.zip" dest="${basedir}/hg_utils.zip" verbose="true" usetimestamp="true" ignoreerrors="true" username="${wurl_username}" password="${wurl_password}" />
            <unzip dest="${basedir}">
                <fileset dir="${basedir}" includes="hg_utils.zip" />
            </unzip>
	    <delete file="${basedir}/hg_utils.zip"/>

	     <copy file="${basedir}/hg_utils/build/library.xml" todir="." overwrite="true"/>

            <copy todir="." overwrite="true">
                <fileset dir="${basedir}/hg_utils/build/rule">
                    <exclude name=""/>
                </fileset>
            </copy>

        </then>
    </if>
    <if>
	<available file="${basedir}/custom_library.xml" type="file"/>
	<then>
	  <concat destfile="${basedir}/library.xml" append="true">
	    <filelist dir="." files="custom_library.xml"/>
	  </concat>
          <move file="${basedir}/custom_library.xml" tofile="${basedir}/custom_library_moved.xml"/>
	</then>
</if>
    <if>
	<available file="${basedir}/hg_utils/build/allowed_dependency_urls.txt" type="file"/>
	<then>
	        <copy file="${basedir}/hg_utils/build/allowed_dependency_urls.txt" todir="." overwrite="true"/>
	</then>
   </if>

<echo message="${build_dir}"/>

	<echo message="Utility package copy added."/>
<if>
  <not>
    <available file="${build_dir}/utility_packages" type="dir"/>
  </not>
  <then>
    <copy todir="${build_dir}/utility_packages" overwrite="true">
      <fileset dir="${basedir}/hg_utils/utility_packages">
        <exclude name=""/>
      </fileset>
    </copy>
  </then>
</if>
    <ant antfile="${basedir}/checks.xml" target="precheck"/> 

</target>

<!-- ============================================================================
       CLEAN TASK
     =========================================================================-->

<target name="clean">
	<if>
		<available file="${basedir}/checks.xml" type="file"/>
		<then>
    		<ant antfile="${basedir}/checks.xml" target="clean"/> 
		</then>
		<else>
			<echo message="checks.xml is not available in current directory."/>
			<echo message="Please run local build and then try to clean"/>
		</else>
	</if>
</target>

</project>

