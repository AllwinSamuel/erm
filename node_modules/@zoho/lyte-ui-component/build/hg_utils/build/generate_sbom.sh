#1st Argument - Hacksaw Binaries
#2nd Argument - BUILD_PATH
#3rd Argument - BUILD_ID
#For Example - Please refer the below path
#HACKSAW_BINARIES=["AdventNetVirtualOfficeSas_mail.zip","AdventNetVirtualOfficeSas_csadmin.zip","AdventNetVirtualOfficeSas_zm.zip"]
#BUILD_PATH="/zoho/build/downloads/dload/zoho/zohomail/webhost/default/Mar_11_2024_9/"
downloadNdExtractSbomPluginBuild(){
    if [ ! -d "${SBOM_HOME}" ]; then
        mkdir -p ${SBOM_HOME}
    fi
    cd ${SBOM_HOME}
    if [ ! -d "${SBOM_PLUGIN_BUILD_PATH}" ]; then
        echo "ERROR :::: Integration Team's Sbom Plugin Build does not exists."
        exit 1
    else
        if [ -f "${SBOM_PLUGIN_BUILD_PATH}/${SBOM_PLUGIN_ZIP_NAME}" ]; then
            unzip -od ${SBOM_HOME} ${SBOM_PLUGIN_BUILD_PATH}/${SBOM_PLUGIN_ZIP_NAME}
        fi
    fi
}
setEnvHome(){
    export JAVA_HOME=/zoho/build/downloads/java/zulujdk11.0.6/
    export PATH=$JAVA_HOME/bin:$PATH

    export SBOM_HOME="${HOME}/SBOM"
    export SBOM_PLUGIN_BUILD_PATH="${HOME}/downloads/dload/integ/integ_sbom_plugin/milestones/latest"
    export SBOM_PLUGIN_ZIP_NAME="Sbom_Plugin.zip"
    export BUILD_ID=${3}

    export CUR_DATE=`date +%b_%d_%Y`
    export SBOM_BUILD_ID_PATH="${SBOM_HOME}/${CUR_DATE}/${BUILD_ID}"

    export HACKSAW_BINARIES="${1}"
    export BUILD_PATH="${2}"

    export TP_SBOM_JSON_NAME="sbom_tp.json"
    export SBOM_JSON_NAME="sbom.json"
}
generateSbomForRespectiveBinaries(){
  mkdir -p ${SBOM_BUILD_ID_PATH}
  cd ${SBOM_BUILD_ID_PATH}
  echo $HACKSAW_BINARIES | sed -n 1'p' | sed -e 's@\[@@g' -e 's@\]@@g' | tr ',' '\n' | while read binary; do
    without_space_binary="`echo $binary | sed 's/[[:space:]]//g'`"
    binary_name="`basename "${without_space_binary%.*}"`"
    if [ -f ${BUILD_PATH}/${without_space_binary} ]; then
       echo "INFO :::: Copying the ${BUILD_PATH}/${without_space_binary} to ${SBOM_BUILD_ID_PATH}"
       cp -fv ${BUILD_PATH}/${without_space_binary} ./
       echo "INFO :::: SBOMCreation StartedAt(`date "+%Y-%m-%d %T"`)"
       java -cp ${SBOM_HOME}/lib/Sbom_Plugin.jar:${SBOM_HOME}/lib/* com.zoho.integ.CreateSbom ${SBOM_BUILD_ID_PATH}/${without_space_binary} ${SBOM_BUILD_ID_PATH} 4 > sbom_${without_space_binary}.log 2>&1
       echo "INFO :::: SBOMCreation EndedAt(`date "+%Y-%m-%d %T"`)"
       if [ -f "${SBOM_BUILD_ID_PATH}/sbom.odc.cyclonedx.json" ]; then
           echo "INFO :::: Content for SBOM for the binary ${binary} IS Started"
           cat sbom.odc.cyclonedx.json
           echo "INFO :::: Content for SBOM for the binary ${binary} IS Ended"
           ls -ltrh ${SBOM_BUILD_ID_PATH}
           if [[ "${binary_name}" =~ "tp_components" ]]; then
               mv -fv sbom.odc.cyclonedx.json ${TP_SBOM_JSON_NAME}
               zip -ru ${BUILD_PATH}/${without_space_binary} ${TP_SBOM_JSON_NAME}
               mv -fv Instrumentation.json Instrumentation_${binary_name}.json
           else
               mkdir AdventNet
               cp -fv sbom.odc.cyclonedx.json AdventNet/sbom_${binary_name}.json
               mv -fv sbom.odc.cyclonedx.json AdventNet/sbom.json
               zip -ru ${BUILD_PATH}/${without_space_binary} AdventNet/sbom.json
               rm -fv AdventNet/sbom.json
               mv -fv Instrumentation.json AdventNet/Instrumentation_${binary_name}.json
           fi
       else
           echo "Problem in generating sbom.odc.cyclonedx.json file for ${binary}"
       fi
    else
        continue
    fi
  done
  rm -rfv ${SBOM_BUILD_ID_PATH}
}
main(){
    setEnvHome $*
    downloadNdExtractSbomPluginBuild $*
    generateSbomForRespectiveBinaries $*
}
main $*
